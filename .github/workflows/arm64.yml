name: Python Windows ARM64
on:
  push:
    branches:
      - WoA_Python

permissions:
  contents: read

jobs:
  wheel-windows-arm64:
    name: Windows ARM64, Python ${{ matrix.ver }}
    runs-on: windows-11-arm64
    timeout-minutes: 90  # Prevent indefinite hanging
    strategy:
      fail-fast: false
      matrix:
        ver: ['3.11', '3.12']  # Only supported Python versions for ARM64
    env:
      BAZELISK_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BAZEL_CPU: arm64_windows
      PLAT_NAME: win_arm64
    steps:
      - uses: actions/checkout@v4.2.2
      
      # Stash the timestamp for the commit SHA that triggered the workflow
      - run: echo "timestamp=$(git log -1 --pretty=%ct)" >> "${GITHUB_ENV}"
        shell: bash
      
      - uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-version: '1.x'
      
      - uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.ver }}
          architecture: arm64
      
      - name: Prepare Python ${{ matrix.ver }} environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools build wheel delvewheel
          python -m pip install --upgrade absl-py mypy
          python python/toolchains/generate.py
        shell: bash
      
      - name: Build wheel
        env:
          SOURCE_DATE_EPOCH: ${{ env.timestamp }}
        run: |
          python -m build --wheel
          python -m delvewheel repair --wheel-dir=. dist/*
        shell: bash
        working-directory: python
      
      - name: Test wheel
        run: |
          python -m pip install google_re2-*.whl
          # Pivot out of the repository so that we test the wheel
          DIR=$(mktemp -d)
          cp re2_test.py "${DIR}"
          cd "${DIR}"
          python re2_test.py
        shell: bash
        working-directory: python
      
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ hashFiles('python/google_re2-*.whl') }}
          path: python/google_re2-*.whl
          retention-days: 7  # Keep artifacts longer for manual workflows

  publish-arm64:
    needs: wheel-windows-arm64
    if: inputs.build >= 1
    permissions:
      contents: read
      # Required for PyPI publishing
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4.2.2
      
      # Stash the timestamp for the commit SHA that triggered the workflow
      - run: echo "timestamp=$(git log -1 --pretty=%ct)" >> "${GITHUB_ENV}"
        shell: bash
      
      - uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.x'
      
      - name: Prepare Python 3.x environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools build wheel
        shell: bash
      
      - uses: actions/download-artifact@v4.3.0
        with:
          path: python
      
      - name: Set build number to ${{ inputs.build }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.timestamp }}
        run: |
          mkdir -p dist
          for WHL in */google_re2-*.whl; do
            python -m wheel unpack "${WHL}"
            python -m wheel pack --dest-dir=dist --build-number=${{ inputs.build }} google_re2-*
            rm -rf google_re2-*
          done
        shell: bash
        working-directory: python
      
      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          packages-dir: python/dist
